{
	"info": {
		"_postman_id": "aee1ce61-f44f-49cf-8f1e-7895e3cda1ef",
		"name": "Livuejournal API",
		"description": "Conduit API\n\nContact Support:\n Name: RealWorld",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Register a new user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": {\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<password>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Register a new user"
					},
					"response": [
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<password>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"username\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<password>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"user\": {\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"username\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"image\": \"<string>\"\n }\n}"
						}
					]
				},
				{
					"name": "Get current user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Gets the currently logged-in user"
					},
					"response": [
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"user\": {\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"username\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"image\": \"<string>\"\n }\n}"
						}
					]
				},
				{
					"name": "Update current user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"token\": \"<string>\",\n        \"username\": \"<string>\",\n        \"bio\": \"<string>\",\n        \"image\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Updated user information for current user"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"token\": \"<string>\",\n        \"username\": \"<string>\",\n        \"bio\": \"<string>\",\n        \"image\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"user\": {\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"username\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"image\": \"<string>\"\n }\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"token\": \"<string>\",\n        \"username\": \"<string>\",\n        \"bio\": \"<string>\",\n        \"image\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"token\": \"<string>\",\n        \"username\": \"<string>\",\n        \"bio\": \"<string>\",\n        \"image\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Existing user login",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"password\": \"<password>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						},
						"description": "Login for existing user"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"password\": \"<password>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"password\": \"<password>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"user\": {\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"username\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"image\": \"<string>\"\n }\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"email\": \"<string>\",\n        \"password\": \"<password>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "profiles/{username}",
			"item": [
				{
					"name": "follow",
					"item": [
						{
							"name": "Follow a user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles/:username/follow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":username",
										"follow"
									],
									"variable": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) Username of the profile you want to follow"
										}
									]
								},
								"description": "Follow a user by username"
							},
							"response": [
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profiles/:username/follow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												":username",
												"follow"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profiles/:username/follow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												":username",
												"follow"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profile\": {\n  \"username\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"image\": \"<string>\",\n  \"following\": \"<boolean>\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profiles/:username/follow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												":username",
												"follow"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Unfollow a user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/profiles/:username/follow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":username",
										"follow"
									],
									"variable": [
										{
											"key": "username",
											"value": "<string>",
											"description": "(Required) Username of the profile you want to unfollow"
										}
									]
								},
								"description": "Unfollow a user by username"
							},
							"response": [
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profiles/:username/follow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												":username",
												"follow"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
								},
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profiles/:username/follow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												":username",
												"follow"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"profile\": {\n  \"username\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"image\": \"<string>\",\n  \"following\": \"<boolean>\"\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/profiles/:username/follow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"profiles",
												":username",
												"follow"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get a profile",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/profiles/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"profiles",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) Username of the profile to get"
								}
							]
						},
						"description": "Get a profile of a user of the system. Auth is optional"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profiles/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profiles/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/profiles/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"profiles",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"profile\": {\n  \"username\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"image\": \"<string>\",\n  \"following\": \"<boolean>\"\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "articles",
			"item": [
				{
					"name": "{slug}",
					"item": [
						{
							"name": "comments",
							"item": [
								{
									"name": "Get comments for an article",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug",
												"comments"
											],
											"variable": [
												{
													"key": "slug",
													"value": "<string>",
													"description": "(Required) Slug of the article that you want to get comments for"
												}
											]
										},
										"description": "Get the comments for an article. Auth is optional"
									},
									"response": [
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"comments\": [\n  {\n   \"id\": \"<integer>\",\n   \"createdAt\": \"<dateTime>\",\n   \"updatedAt\": \"<dateTime>\",\n   \"body\": \"<string>\",\n   \"author\": {\n    \"username\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"image\": \"<string>\",\n    \"following\": \"<boolean>\"\n   }\n  },\n  {\n   \"id\": \"<integer>\",\n   \"createdAt\": \"<dateTime>\",\n   \"updatedAt\": \"<dateTime>\",\n   \"body\": \"<string>\",\n   \"author\": {\n    \"username\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"image\": \"<string>\",\n    \"following\": \"<boolean>\"\n   }\n  }\n ]\n}"
										}
									]
								},
								{
									"name": "Create a comment for an article",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": {\n        \"body\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:slug/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug",
												"comments"
											],
											"variable": [
												{
													"key": "slug",
													"value": "<string>",
													"description": "(Required) Slug of the article that you want to create a comment for"
												}
											]
										},
										"description": "Create a comment for an article. Auth is required"
									},
									"response": [
										{
											"name": "Unexpected error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"comment\": {\n        \"body\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"comment\": {\n        \"body\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"comment\": {\n  \"id\": \"<integer>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"body\": \"<string>\",\n  \"author\": {\n   \"username\": \"<string>\",\n   \"bio\": \"<string>\",\n   \"image\": \"<string>\",\n   \"following\": \"<boolean>\"\n  }\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"comment\": {\n        \"body\": \"<string>\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a comment for an article",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug/comments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug",
												"comments",
												":id"
											],
											"variable": [
												{
													"key": "slug",
													"value": "<string>",
													"description": "(Required) Slug of the article that you want to delete a comment for"
												},
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) ID of the comment you want to delete"
												}
											]
										},
										"description": "Delete a comment for an article. Auth is required"
									},
									"response": [
										{
											"name": "Unexpected error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "slug"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "slug"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/comments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"comments",
														":id"
													],
													"variable": [
														{
															"key": "slug"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "favorite",
							"item": [
								{
									"name": "Favorite an article",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug/favorite",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug",
												"favorite"
											],
											"variable": [
												{
													"key": "slug",
													"value": "<string>",
													"description": "(Required) Slug of the article that you want to favorite"
												}
											]
										},
										"description": "Favorite an article. Auth is required"
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/favorite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"favorite"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"article\": {\n  \"slug\": \"<string>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"body\": \"<string>\",\n  \"tagList\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"favorited\": \"<boolean>\",\n  \"favoritesCount\": \"<integer>\",\n  \"author\": {\n   \"username\": \"<string>\",\n   \"bio\": \"<string>\",\n   \"image\": \"<string>\",\n   \"following\": \"<boolean>\"\n  }\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/favorite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"favorite"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unexpected error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/favorite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"favorite"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
										}
									]
								},
								{
									"name": "Unfavorite an article",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug/favorite",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug",
												"favorite"
											],
											"variable": [
												{
													"key": "slug",
													"value": "<string>",
													"description": "(Required) Slug of the article that you want to unfavorite"
												}
											]
										},
										"description": "Unfavorite an article. Auth is required"
									},
									"response": [
										{
											"name": "Unexpected error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/favorite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"favorite"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/favorite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"favorite"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/articles/:slug/favorite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"articles",
														":slug",
														"favorite"
													],
													"variable": [
														{
															"key": "slug"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"article\": {\n  \"slug\": \"<string>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"body\": \"<string>\",\n  \"tagList\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"favorited\": \"<boolean>\",\n  \"favoritesCount\": \"<integer>\",\n  \"author\": {\n   \"username\": \"<string>\",\n   \"bio\": \"<string>\",\n   \"image\": \"<string>\",\n   \"following\": \"<boolean>\"\n  }\n }\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get an article",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":slug"
									],
									"variable": [
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) Slug of the article to get"
										}
									]
								},
								"description": "Get an article. Auth not required"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"article\": {\n  \"slug\": \"<string>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"body\": \"<string>\",\n  \"tagList\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"favorited\": \"<boolean>\",\n  \"favoritesCount\": \"<integer>\",\n  \"author\": {\n   \"username\": \"<string>\",\n   \"bio\": \"<string>\",\n   \"image\": \"<string>\",\n   \"following\": \"<boolean>\"\n  }\n }\n}"
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
								}
							]
						},
						{
							"name": "Update an article",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/articles/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":slug"
									],
									"variable": [
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) Slug of the article to update"
										}
									]
								},
								"description": "Update an article. Auth is required"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"article\": {\n  \"slug\": \"<string>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"body\": \"<string>\",\n  \"tagList\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"favorited\": \"<boolean>\",\n  \"favoritesCount\": \"<integer>\",\n  \"author\": {\n   \"username\": \"<string>\",\n   \"bio\": \"<string>\",\n   \"image\": \"<string>\",\n   \"following\": \"<boolean>\"\n  }\n }\n}"
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
								}
							]
						},
						{
							"name": "Delete an article",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/articles/:slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										":slug"
									],
									"variable": [
										{
											"key": "slug",
											"value": "<string>",
											"description": "(Required) Slug of the article to delete"
										}
									]
								},
								"description": "Delete an article. Auth is required"
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unexpected error",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/articles/:slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":slug"
											],
											"variable": [
												{
													"key": "slug"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get recent articles globally",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/articles?tag=<string>&author=<string>&favorited=<string>&limit=20&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							],
							"query": [
								{
									"key": "tag",
									"value": "<string>",
									"description": "Filter by tag"
								},
								{
									"key": "author",
									"value": "<string>",
									"description": "Filter by author (username)"
								},
								{
									"key": "favorited",
									"value": "<string>",
									"description": "Filter by favorites of a user (username)"
								},
								{
									"key": "limit",
									"value": "20",
									"description": "Limit number of articles returned (default is 20)"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset/skip number of articles (default is 0)"
								}
							]
						},
						"description": "Get most recent articles globally. Use query parameters to filter results. Auth is optional"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles?tag=<string>&author=<string>&favorited=<string>&limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles"
									],
									"query": [
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "author",
											"value": "<string>"
										},
										{
											"key": "favorited",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles?tag=<string>&author=<string>&favorited=<string>&limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles"
									],
									"query": [
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "author",
											"value": "<string>"
										},
										{
											"key": "favorited",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"articles\": [\n  {\n   \"slug\": \"<string>\",\n   \"title\": \"<string>\",\n   \"description\": \"<string>\",\n   \"body\": \"<string>\",\n   \"tagList\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"createdAt\": \"<dateTime>\",\n   \"updatedAt\": \"<dateTime>\",\n   \"favorited\": \"<boolean>\",\n   \"favoritesCount\": \"<integer>\",\n   \"author\": {\n    \"username\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"image\": \"<string>\",\n    \"following\": \"<boolean>\"\n   }\n  },\n  {\n   \"slug\": \"<string>\",\n   \"title\": \"<string>\",\n   \"description\": \"<string>\",\n   \"body\": \"<string>\",\n   \"tagList\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"createdAt\": \"<dateTime>\",\n   \"updatedAt\": \"<dateTime>\",\n   \"favorited\": \"<boolean>\",\n   \"favoritesCount\": \"<integer>\",\n   \"author\": {\n    \"username\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"image\": \"<string>\",\n    \"following\": \"<boolean>\"\n   }\n  }\n ],\n \"articlesCount\": \"<integer>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles?tag=<string>&author=<string>&favorited=<string>&limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles"
									],
									"query": [
										{
											"key": "tag",
											"value": "<string>"
										},
										{
											"key": "author",
											"value": "<string>"
										},
										{
											"key": "favorited",
											"value": "<string>"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						}
					]
				},
				{
					"name": "Create an article",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\",\n        \"tagList\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles"
							]
						},
						"description": "Create an article. Auth is required"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\",\n        \"tagList\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/articles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"article\": {\n  \"slug\": \"<string>\",\n  \"title\": \"<string>\",\n  \"description\": \"<string>\",\n  \"body\": \"<string>\",\n  \"tagList\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"favorited\": \"<boolean>\",\n  \"favoritesCount\": \"<integer>\",\n  \"author\": {\n   \"username\": \"<string>\",\n   \"bio\": \"<string>\",\n   \"image\": \"<string>\",\n   \"following\": \"<boolean>\"\n  }\n }\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\",\n        \"tagList\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/articles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"article\": {\n        \"title\": \"<string>\",\n        \"description\": \"<string>\",\n        \"body\": \"<string>\",\n        \"tagList\": [\n            \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/articles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get recent articles from users you follow",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/articles/feed?limit=20&offset=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"articles",
								"feed"
							],
							"query": [
								{
									"key": "limit",
									"value": "20",
									"description": "Limit number of articles returned (default is 20)"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "Offset/skip number of articles (default is 0)"
								}
							]
						},
						"description": "Get most recent articles from users you follow. Use query parameters to limit. Auth is required"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles/feed?limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										"feed"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles/feed?limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										"feed"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"articles\": [\n  {\n   \"slug\": \"<string>\",\n   \"title\": \"<string>\",\n   \"description\": \"<string>\",\n   \"body\": \"<string>\",\n   \"tagList\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"createdAt\": \"<dateTime>\",\n   \"updatedAt\": \"<dateTime>\",\n   \"favorited\": \"<boolean>\",\n   \"favoritesCount\": \"<integer>\",\n   \"author\": {\n    \"username\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"image\": \"<string>\",\n    \"following\": \"<boolean>\"\n   }\n  },\n  {\n   \"slug\": \"<string>\",\n   \"title\": \"<string>\",\n   \"description\": \"<string>\",\n   \"body\": \"<string>\",\n   \"tagList\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"createdAt\": \"<dateTime>\",\n   \"updatedAt\": \"<dateTime>\",\n   \"favorited\": \"<boolean>\",\n   \"favoritesCount\": \"<integer>\",\n   \"author\": {\n    \"username\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"image\": \"<string>\",\n    \"following\": \"<boolean>\"\n   }\n  }\n ],\n \"articlesCount\": \"<integer>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/articles/feed?limit=20&offset=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"articles",
										"feed"
									],
									"query": [
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get tags",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/tags",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"tags"
					]
				},
				"description": "Get tags. Auth not required"
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"tags\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
				},
				{
					"name": "Unexpected error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errors\": {\n  \"body\": [\n   \"<string>\",\n   \"<string>\"\n  ]\n }\n}"
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "/api",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}